[metadata]
description-file = README.md

[isort]
profile = black
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = dialogchain
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[flake8]
max-line-length = 88
extend-ignore = E203, W503
extend-select = ANN, B, C, E, F, I, N, S, W, TCH, TID, UP, YTT
max-complexity = 15
per-file-ignores =
    # Allow star imports in __init__.py
    __init__.py: F403,F401
    # Allow re-exports
    **/__init__.py: F401
    # Allow type comments
    **/*.py: TCH001,TCH002,TCH003

[mypy]
python_version = 3.8
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
no_implicit_reexport = true
strict_equality = true

[coverage:run]
source = dialogchain
branch = true
omit =
    **/tests/*
    **/__init__.py
    **/version.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    raise ImportError
    except ImportError

[bandit]
exclude_dirs = .git,.tox,__pycache__,venv,build,dist
skips = B101,B104,B110,B311,B405,B410,B603,B607

[pycodestyle]
max-line-length = 88
exclude = .git,__pycache__,build,dist

[pydocstyle]
add-ignore = D100,D104,D105,D107,D200,D203,D212,D400,D401,D415
match = (?!test_).*\.py

[pyright]
pythonVersion = "3.8"
pythonPlatform = "Linux"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
disableTypeCommentChecks = true
reportMissingTypeStubs = false
reportOptionalMemberAccess = true
