# Advanced Camera Processing Routes
# Demonstrates multi-stage processing with different languages

routes:
  - name: "advanced_camera_detection"
    from: "rtsp://{{CAMERA_USER}}:{{CAMERA_PASS}}@{{CAMERA_IP}}/stream1"
    
    processors:

      - type: "transform"
        template: |
          ðŸš¨ SECURITY ALERT - {{camera_name}}
          
          Detections:
          
          Business Context:
          â€¢ Business Hours: {{#business_context.is_business_hours}}Yes{{/business_context.is_business_hours}}{{^business_context.is_business_hours}}No{{/business_context.is_business_hours}}
          â€¢ Zone Risk: {{business_context.zone_risk_level}}
          â€¢ Immediate Response Required: {{business_context.requires_immediate_response}}
    
    to:
      - "email://{{SMTP_SERVER}}:{{SMTP_PORT}}?user={{SMTP_USER}}&password={{SMTP_PASS}}&to={{ALERT_EMAIL}}"
#      - "http://{{SECURITY_WEBHOOK}}/critical-alert"
#      - "mqtt://{{MQTT_BROKER}}:1883/security/alerts/{{CAMERA_NAME}}"
      - "log://logs/security_{{CAMERA_NAME}}.log"

  - name: "camera_health_monitoring"
    from: "timer://2m"
    
    processors:
      - type: "external"
        command: "python scripts/camera_health_check.py"
        config:
          camera_endpoints: "{{CAMERA_HEALTH_ENDPOINTS}}"
          timeout: 10
          expected_fps: 25
      
      - type: "filter"
        condition: "{{status}} != 'healthy'"
    
    to: "email://{{SMTP_SERVER}}:{{SMTP_PORT}}?user={{SMTP_USER}}&password={{SMTP_PASS}}&to={{ALERT_EMAIL}}"


env_vars:
  - CAMERA_USER
  - CAMERA_PASS
  - CAMERA_IP
  - CAMERA_NAME
  - BACKUP_CAMERA_USER
  - BACKUP_CAMERA_PASS
  - BACKUP_CAMERA_IP
  - SMTP_SERVER
  - SMTP_PORT
  - SMTP_USER
  - SMTP_PASS
  - SECURITY_EMAIL
  - ADMIN_EMAIL
  - SECURITY_WEBHOOK
  - MQTT_BROKER
  - CAMERA_HEALTH_ENDPOINTS

settings:
  max_concurrent_routes: 5
  default_timeout: 60
  log_level: "info"
  metrics_enabled: true
  health_check_port: 8080
  frame_skip_ratio: 3
  max_memory_usage: "2GB"