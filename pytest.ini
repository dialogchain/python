[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto

# Test execution options
addopts = 
    -v                  # Verbose output
    --strict-markers    # Ensure markers are registered
    --disable-warnings  # Disable warnings in output
    --durations=10      # Show 10 slowest tests
    --cov=src/dialogchain  # Enable coverage
    --cov-report=term-missing  # Show missing lines in coverage
    --cov-report=xml:coverage.xml  # Generate coverage XML report
    -p no:warnings      # Don't show warnings summary

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks integration tests (run with '-m integration')
    unit: marks unit tests (run with '-m unit')
    network: tests that require network access

# Configure logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

[coverage:run]
source = src
branch = true
omit =
    **/tests/*
    **/__init__.py
    **/version.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    raise ImportError
    except ImportError